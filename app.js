// Generated by CoffeeScript 1.6.3
(function() {
  var Pet, RestController, app, docs_handler, express, http, path, petModel, petResources, routes, swagger, url, user;

  express = require('express');

  http = require('http');

  path = require('path');

  routes = require('./routes');

  user = require('./routes/user');

  url = require("url");

  swagger = require('./public/swagger/swagger');

  RestController = require('backbone-rest');

  app = express();

  app.set('port', process.env.PORT || 8002);

  app.set('views', path.join(__dirname, 'views'));

  app.set('view engine', 'jade');

  app.use(express.favicon());

  app.use(express.logger('dev'));

  app.use(express.json());

  app.use(express.urlencoded());

  app.use(express.methodOverride());

  app.use(app.router);

  app.use(require('stylus').middleware(path.join(__dirname, 'public')));

  app.use(express["static"](path.join(__dirname, 'public')));

  if ('development' === app.get('env')) {
    app.use(express.errorHandler());
  }

  app.get('/', routes.index);

  app.get('/users', user.list);

  Pet = require('./app/models/pet');

  petModel = require('./app/models/petmodel');

  petResources = require('./app/models/petresource');

  new RestController(app, {
    model_type: Pet,
    route: '/pet'
  });

  swagger.setAppHandler(app);

  swagger.addModels(petModel).addGet(petResources.getPet).addGet(petResources.getPets).addGet(petResources.getAvailablePets).addPost(petResources.postPet).addPut(petResources.putPet).addDelete(petResources.deletePet);

  swagger.configureDeclaration("pet", {
    description: "REST for Pets",
    authorizations: ["oauth2"],
    produces: ["application/json"]
  });

  swagger.setApiInfo({
    title: "Backbone-REST Pet Example API",
    description: "Learning REST server. For this sample, you can use the api key \"special-key\" to test the authorization filters",
    termsOfServiceUrl: "Whatever",
    contact: "robb@appnovation.com",
    license: "Apache 2.0",
    licenseUrl: "http://www.apache.org/licenses/LICENSE-2.0.html"
  });

  swagger.setAuthorizations({
    apiKey: {
      type: "apiKey",
      passAs: "header"
    }
  });

  swagger.configureSwaggerPaths("", "/api-docs", "");

  swagger.configure("http://localhost:8002", "0.1");

  docs_handler = express["static"](path.join(__dirname, './public'));

  app.get(/^\/docs(\/.*)?$/, function(req, res, next) {
    if (req.url === '/docs') {
      res.writeHead(302, {
        'Location': req.url + '/'
      });
      res.end();
      return;
    }
    req.url = req.url.substr('/docs'.length);
    return docs_handler(req, res, next);
  });

  http.createServer(app).listen(app.get('port'), function() {
    return console.log('express server listening on port ' + app.get('port') + '!');
  });

}).call(this);

/*
//@ sourceMappingURL=app.map
*/
